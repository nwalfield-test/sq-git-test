name: pull-request
on:
  pull_request:
      types: [opened, reopened, synchronize]
jobs:
  check-fast-forward:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      # We appear to need write permission for both pull-requests and
      # issues in order to post a comment to a pull request.
      pull-requests: write
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Checking if fast forwarding is possible
        run: |
          # Repository is ${{ github.repository }}
          # Triggered by issue ${{ github.event.issue.number }}

          # All of the event properties are held under the
          # github.event context, which is also available as
          # JSON-encoded data in the file $GITHUB_EVENT_PATH.
          #
          # For a pull_request event:
          #
          # https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads#pull_request
          #
          # env; echo "github.event's value:"; cat ${{ github.event_path }}

          LOG=$(mktemp)
          {
            BASE_REF="${{ github.event.pull_request.base.ref }}"
            # github.event.pull_request.base.sha is the commit of the
            # branch at the time the PR was created and not
            # necessarily the current commit.
            BASE_SHA="$(git rev-parse origin/$BASE_REF)"

            PR_SHA=${{ github.event.pull_request.head.sha }}
            PR_REF=${{ github.event.pull_request.head.ref }}

            echo "Triggered from $PR_SHA by @${{ github.event.sender.login }}."
            echo

            # If the PR comes from a fork, then there is no branch
            # (either local or in origin) named
            # github.event.pull_request.head.ref.
            git branch -f "pull_request/$PR_REF" "$PR_SHA"

            (
              set -x
              git branch -l
              git branch -r
            )

            echo "Trying to fast forward \`$BASE_REF\` ($BASE_SHA):"
            echo
            echo '```shell'
            git log --decorate=short -n 1 "$BASE_SHA"
            echo '```'
            echo
            echo "to \`$PR_REF\` ($PR_SHA):"
            echo
            echo '```shell'
            git log --decorate=short -n 1 "$PR_SHA
            echo '```'
            echo

            if ! git merge-base --is-ancestor "$BASE_SHA "$PR_SHA"
            then
                echo -n "Can't fast forward."
                echo -n " \`$BASE_REF\` $BASE_SHA"
                echo -n " is not a direct ancestor of"
                echo -n " \`$PR_REF\` $PR_SHA."

                MERGE_BASE=$(git merge-base "$BASE_SHA" "$PR_SHA" || true)
                if test x"$MERGE_BASE" = x
                then
                    echo " Branches don't appear to have a common ancestor."
                else
                    echo " Branches appear to have diverged at $MERGE_BASE:"
                    echo
                    echo '```shell'
                    git log --pretty=oneline --graph \
                      "^$MERGE_BASE^" "$BASE_SHA" "$PR_SHA"
                    git log --decorate=short -n 1 "$MERGE_BASE"
                    echo '```'
                    echo
                    echo "Rebase locally, and then force push to \`$PR_REF\`."
                fi
            else
                echo -n "Add a comment with \`/fast-forward\` to fast forward"
                echo " \`$BASE_REF\` to \`$PR_REF\`."
            fi
          } 2>&1 | tee -a "$GITHUB_STEP_SUMMARY" "$LOG"

          # On GITHUB_STEP_SUMMARY:
          #
          # https://github.blog/2022-05-09-supercharging-github-actions-with-job-summaries/

          COMMENT=$(mktemp)
          jq -n --rawfile log "$LOG" '{ "body": $log }' >"$COMMENT"

          COMMENTS_URL="${{ github.event.pull_request.comments_url }}"
          echo "Posting comment to $COMMENTS_URL."
          curl --silent --show-error --location \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "$COMMENTS_URL" \
            -d "@$COMMENT"
