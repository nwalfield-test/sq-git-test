name: fast-forward
on:
  issue_comment:
    types: [created, edited]
jobs:
  fast-forward:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      issues: write

    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/fast-forward') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fast Forwarding
        run: |
          # All of the event properties are held under the
          # github.event context, which is also available as
          # JSON-encoded data in the file $GITHUB_EVENT_PATH.
          #
          # echo github.event's value:; cat $GITHUB_ENV
          LOG=$(mktemp)
          {
            # echo Repository is ${{ github.repository }}
            # echo Triggered by issue ${{ github.event.issue.number }}
            echo Triggered from ${{ github.event.comment.html_url }} by ${{ github.triggering_actor }}.
            echo

            EVENT=$(mktemp)
            curl --silent --show-error --location \
              -X GET \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              ${{ github.event.issue.pull_request.url }} >$EVENT

            # This was the value of the branch at the time the PR was
            # created.
            # BASE_SHA=$(jq -r '.base.sha' <$EVENT)
            BASE_REF=$(jq -r '.base.ref' <$EVENT)

            PR_SHA=$(jq -r '.head.sha' <$EVENT)
            PR_REF=$(jq -r '.head.ref' <$EVENT)

            echo "Trying to fast forward \`$BASE_REF\`:"
            echo
            echo '```shell'
            git log --decorate=short -n 1 "origin/$BASE_REF"
            echo '```'
            echo
            echo "to \`$PR_REF\` ($PR_SHA):"
            echo
            echo '```shell'
            git log --decorate=short -n 1 "origin/$PR_REF"
            echo '```'
            echo

            if ! git merge-base --is-ancestor "origin/$BASE_REF" "origin/$PR_REF"
            then
                echo -n "Can't fast forward."
                echo -n " \`$BASE_REF\` $(git rev-parse origin/$BASE_REF) is not a direct ancestor"
                echo -n " of \`$PR_REF\` $(git rev-parse origin/$PR_REF). "
                MERGE_BASE=$(git merge-base "origin/$BASE_REF" "origin/$PR_REF" || true)
                if test x"$MERGE_BASE" = x
                then
                    echo "Branches don't appear to have a common ancestor."
                else
                    echo "Branches appear to have diverged at $MERGE_BASE:"
                    echo '```shell'
                    git log --pretty=oneline --graph "^$MERGE_BASE^" "origin/$BASE_REF" "origin/$PR_REF"
                    git log --decorate=short -n 1 "$MERGE_BASE"
                    echo '```'
                fi
            else
                echo '```shell'
                set -x
                git checkout "$BASE_REF"
                git merge --ff-only "origin/$PR_REF"
                git push origin
                set +x
                echo '```'
            fi
          } 2>&1 | tee $LOG

          MSG=$(mktemp)
          jq -n --arg log "$(cat $LOG)" '{ "body": $log }' >"$MSG"

          echo Posting comment.
          curl --silent --show-error --location \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            ${{ github.event.issue.url }}/comments \
            -d "@$MSG"
