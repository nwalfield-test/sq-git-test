name: fast-forward
on:
  issue_comment:
    types: [created, edited]
jobs:
  fast-forward:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      issues: write

    if: ${{ github.event.issue.pull_request
            && github.event.issue.state == 'open'
            && contains(github.event.comment.body, '/fast-forward') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fast Forwarding
        run: |
          # Repository is ${{ github.repository }}
          # Triggered by issue ${{ github.event.issue.number }}

          # All of the event properties are held under the
          # github.event context, which is also available as
          # JSON-encoded data in the file $GITHUB_EVENT_PATH.
          #
          # For an issue_comment event:
          #
          # https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads#issue_comment
          #
          # env; echo "github.event's value:";
          cat ${{ github.event_path }}

          LOG=$(mktemp)
          {
            echo "Triggered from ${{ github.event.comment.html_url }} by ${{ github.triggering_actor }}."
            echo

            # Get the PR metadata.
            EVENT=$(mktemp)
            curl --silent --show-error --location \
              -X GET \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "${{ github.event.issue.pull_request.url }}" >$EVENT

            cat $EVENT

            BASE_REF=$(jq -r '.base.ref' <$EVENT)
            # This was the value of the branch at the time the PR was
            # created.
            # BASE_SHA=$(jq -r '.base.sha' <$EVENT)
            BASE_SHA="$(git rev-parse origin/$BASE_REF)"

            PR_REF=$(jq -r '.head.ref' <$EVENT)
            PR_SHA=$(jq -r '.head.sha' <$EVENT)

            # Our git repository only has the content from the main
            # repository.  If this is a foreign repository, then we
            # need fetch its contents too.  (If not, this is a no op.)
            CLONE_URL=$(jq -r '.head.repo.clone_url' <$EVENT)
            git fetch "$CLONE_URL" "$PR_SHA"

            # If the PR comes from a fork, then there is no branch
            # (either local or in origin) named
            # github.event.pull_request.head.ref.
            git branch -f "pull_request/$PR_REF" "$PR_SHA"

            echo "Trying to fast forward \`$BASE_REF\` ($BASE_SHA):"
            echo
            echo '```shell'
            git log --decorate=short -n 1 "$BASE_SHA"
            echo '```'
            echo
            echo "to \`$PR_REF\` ($PR_SHA):"
            echo
            echo '```shell'
            git log --decorate=short -n 1 "$PR_SHA"
            echo '```'
            echo

            if ! git merge-base --is-ancestor "$BASE_SHA" "$PR_SHA"
            then
                echo -n "Can't fast forward."
                echo -n " \`$BASE_REF\` $BASE_SHA"
                echo -n " is not a direct ancestor of"
                echo -n " \`$PR_REF\` $PR_SHA."

                MERGE_BASE=$(git merge-base "$BASE_SHA" "$PR_SHA" || true)
                if test x"$MERGE_BASE" = x
                then
                    echo " Branches don't appear to have a common ancestor."
                else
                    echo " Branches appear to have diverged at $MERGE_BASE:"
                    echo
                    echo '```shell'
                    git log --pretty=oneline --graph \
                      "^$MERGE_BASE^" "$BASE_SHA" "$PR_SHA"
                    git log --decorate=short -n 1 "$MERGE_BASE"
                    echo '```'
                    echo
                    echo "Rebase locally, and then force push to \`$PR_REF\`."
                fi
            else
                # https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#check-if-a-user-is-a-repository-collaborator
                COLLABORATORS_URL="${{ github.repository.collaborators_url }}"
                echo "COLLABORATORS_URL: $COLLABORATORS_URL"
                COLLABORATORS_URL="${COLLABORATORS_URL%\{/collaborator\}}/${{ github.event.sender.login }}"
                echo "COLLABORATORS_URL 2: $COLLABORATORS_URL"
                if curl --silent --show-error --location \
                    -H "Accept: application/vnd.github+json" \
                    -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    --head \
                    "$COMMENTS_URL" \
                    | awk '
                        /^HTTP/ {
                          if ($2 == "204") {
                            exit 0;
                          } else {
                            print "Access denied: "$2;
                            exit 1;
                          }
                        }

                        END { exit 1; }'
                then
                  echo '```shell'
                  (
                    PS4='$ '
                    set -x
                    git push origin "$PR_SHA:$BASE_REF"
                  )
                  echo '```'
                else
                  echo "Only those with write access to this repository can merge pull requests."
                fi
            fi
          } 2>&1 | tee -a "$GITHUB_STEP_SUMMARY" "$LOG"

          # On GITHUB_STEP_SUMMARY:
          #
          # https://github.blog/2022-05-09-supercharging-github-actions-with-job-summaries/

          COMMENT=$(mktemp)
          jq -n --rawfile log "$LOG" '{ "body": $log }' >"$COMMENT"

          COMMENTS_URL="${{ github.event.issue.url }}/comments"
          echo "Posting comment to $COMMENTS_URL."
          curl --silent --show-error --location \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "$COMMENTS_URL" \
            -d "@$COMMENT"
